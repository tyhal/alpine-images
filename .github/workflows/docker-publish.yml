name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:


jobs:
#  test:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'pull_request'
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Run tests
#        run: docker-compose build --parallel

  push-dockerhub:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: set environ
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      ## IMAGES

      - name: Stack
        id: stack_build
        uses: docker/build-push-action@v2
        with:
          context: img/commercialhaskell/stack
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/stack:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Hadolint
        id: hadolint_build
        uses: docker/build-push-action@v2
        with:
          context: img/hadolint/hadolint
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            VERSION=${{ env.VERSION }}
            REPO=${{ secrets.DOCKER_HUB_USERNAME }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/hadolint:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
